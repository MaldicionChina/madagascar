
from rsf.proj import *

# Download from http://www.freeusp.org/2007_BP_Ani_Vel_Benchmark/
tgz = 'ModelParams.tar.gz'

Fetch(tgz,'BP',top=os.environ.get('DATAPATH'),server='local')

pars = Split('epsilon delta vp theta')

sgy = {}
for par in pars:
    sgy[par] = os.path.join('ModelParams',par.capitalize() + '_Model.sgy')

zcat = WhereIs('gzcat') or WhereIs('zcat')

Flow(sgy.values(),tgz,
     zcat + ' $SOURCE | tar -xvf -',stdin=0,stdout=-1)

units = {
	'epsilon':'',
	'delta':'',
	'vp':'km/s',
	'theta':'\^o\_'
}

name = dict(vp='V\_z\^',
            vx='V\_x\^',
            eta='\F10 h\F3 ',
            theta='\F10 q\F3 ',
            theta0='\F10 q\F3 ', 
            epsilon='\F10 e\F3 ', 
            delta='\F10 d\F3 ')

for par in pars:
    Flow([par,par+'.asc',par+'.bin'],sgy[par],
         '''
         segyread hfile=${TARGETS[1]} bfile=${TARGETS[2]} read=d |
         put
         o2=0 d2=0.00625 label2=Distance unit2=km
         o1=0 d1=0.00625 label1=Depth unit1=km %s |
          transp plane=12 
         ''' % ('','| scale dscale=0.001')[par=='vp'])
    Result(par,
           '''
           window j1=8 j2=2 |
           grey color=j barlabel="%s" scalebar=y
           screenwd=12.595 screenht=1.8 transp=n
           labelsz=5 titlesz=6 barreverse=y parallel2=n
           wanttitle=n allpos=%d bias=%g barunit="%s"           
           ''' % (name[par],
                  par != 'theta',
                  (0,1.5)[par=='vp'],
                  units[par]))
Flow('vx','vp epsilon',
     '''
     math e=${SOURCES[1]} output="input*sqrt(1+2*e)"
     ''')
Flow('eta','epsilon delta',
     '''
     math e=${SOURCES[0]} d=${SOURCES[1]} output="(e-d)/(1+2*d)"
     ''')
for par in ('vx','eta'):
    Result(par,
           '''
           window j1=8 j2=2 |
           grey color=j barlabel="%s" scalebar=y
           screenwd=12.595 screenht=1.8 parallel2=n
           labelsz=5 titlesz=6 barreverse=y
           wanttitle=y allpos=%d bias=%g barunit="%s"
           transp=n title=%s
           ''' % (name[par],
                  par != 'theta',
                  (0,1.5)[par=='vx'],
                  ('','km/s')[par=='vx'],
                  par.capitalize()))


# http://www.freeusp.org/2007_BP_Ani_Vel_Benchmark/Anisotropic_FD_Model_Shots_part1.sgy.gz

shots =[]
tshots = []
for s in range(4):
    sgy = 'Anisotropic_FD_Model_Shots_part%d.sgy' % (s+1)
    sgyz = sgy+'.gz'

    Fetch(sgyz,'BP',top=os.environ.get('DATAPATH'),server='local')
    Flow(sgy,sgyz,zcat + ' $SOURCE',stdin=0)

    shot = 'shot%d' % s
    Flow([shot,'t'+shot,shot+'.asc'],sgy,
         'segyread tfile=${TARGETS[1]} hfile=${TARGETS[2]}')

    shots.append(shot)
    tshots.append('t'+shot)

Flow('shot',shots,'cat axis=2 ${SOURCES[1:4]}')
Flow('tshot',tshots,'cat axis=2 ${SOURCES[1:4]}')


#C20 INPUT MODEL INFORMATION                                                    
#C21 dX and dZ are 6.25m,  Surface Type:  Absorbing                              
#C22 2D Elastic Finite Difference Modelling                                      
#C23                                                                             
#C24 Acquisition Parameters:                                                     
#C25 No. of Shots = 1641; First SP at X = 0; Y =0, Shooting Direction = 90deg    
#C26 SP interval = 50m                                                           
#C27 Single Source, depth 6m                                                     
#C28 No. of Channels = 800                                                       
#C29 Receiver Interval = 12.5m                                                   
#C30 Receiver Depth = 8m                                                         
#C31 Near Offset = 37.5m, Max Offset = 10025m                                    
#C32 Sample Rate = 8ms; Record Length = 9200ms                                   
#C33                                                                             
#C34 A -48ms timeshift can be applied to convert data to approx. zero-phase      
#C35                                                                             
#C36 SHOT  bytes   9- 12 (fldr)        CDP   bytes  21- 24 (cdp)                            
#C37 CDP X bytes 181-184 (cdpx, in cm); CDP Y bytes 185-188 (cdpy, in cm)     

Flow('shots','shot tshot',
     '''
     intbin head=${SOURCES[1]} xk=tracf yk=fldr | put
     label2=Offset unit2=km o2=-10.025 d2=0.0125
     label3=Shot   unit3=km o3=0       d3=0.05
     ''')

Result('shots',
       '''
       byte gainpanel=all |
       grey3 frame1=500 frame2=400 frame3=800 flat=n title=Shots
       ''')

Flow('no','shots','window n2=1 f2=-1')

Result('no','cut max1=0.15 | pow pow1=1 | grey title="Near Offset" ')

End()
