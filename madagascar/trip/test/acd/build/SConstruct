from rsf.proj import *
import os

CWPROOT         = os.getenv('CWPROOT')
sunull          = os.path.join(CWPROOT,'bin/sunull')
sushw           = os.path.join(CWPROOT,'bin/sushw')
suchw           = os.path.join(CWPROOT,'bin/suchw')
sugain          = os.path.join(CWPROOT,'bin/sugain')
suwaveform      = os.path.join(CWPROOT,'bin/suwaveform')
suspike         = os.path.join(CWPROOT,'bin/suspike')
sufilter        = os.path.join(CWPROOT,'bin/sufilter')
RSFSRC          = os.getenv('RSFSRC')
stdmdl          = os.path.join(RSFSRC,'trip/iwave/gridnew/main/standardmodel.x')
towed_array     = os.path.join(RSFSRC,'trip/iwave/trace/main/towed_array.x')
acd             = os.path.join(RSFSRC,'trip/iwave/acd/main/acd.x')

# dome velo
Flow('domevp20m', None, 
     stdmdl + ' model=8 hfile=domevp20m.rsf choose=2 ' +
     'd1=20 d2=20 d3=1 ' +
     'n1=91 n2=391 n3=1 ' +
     'o1=0  o2=0  o3=0 ', 
     stdin=-1, stdout=-1)

# dome csq
Flow('domecsq20m', 'domevp20m', 'add mode=p  ${SOURCES[0]} ${SOURCES[0]} | put gdim=2 dim=2 id1=0 id2=1 unit1=m unit2=m', stdin=0)

# const csq
Flow('csq', None, 'spike n1=91 n2=391 o1=0 o2=0 d1=20 d2=20 unit1=m unit2=m | scale dscale=2.25',stdin=0)

Flow('wavelet_base.su', None, 
     suspike + ' ntr=1 nt=501  offset=0 nspk=1 ix1=1 it1=201 dt=0.002 |' +
     sushw + ' key=delrt  a=-400 |' +
     sufilter + ' f=0.,2.5,15.0,20.0 amps=0.,1.,1.,0. |' +
     sugain + ' scale=1.e6 > wavelet_base.su', 
     stdin=-1, stdout=-1)  

Flow('data.su', None, 
     sunull + ' nt=1501 ntr=301 dt=0.002 |' + 
     sushw + ' key=sx a=3300 c=0 j=301 |' +
     sushw + ' key=gx a=100 b=20 j=301 |' +
     sushw + ' key=delrt a=0 |' + 
     sushw + ' key=selev a=-40 |' +
     sushw + ' key=gelev a=-20 > data.su', 
     stdin=-1, stdout=-1)

Flow('source.su', ['wavelet_base.su', 'data.su'],
     towed_array + 		      
     '''
     data=${SOURCES[1]} 
     src=${SOURCES[0]} 
     towed=${TARGETS[0]}
     ''',
     stdin=0, stdout=0)

tests = ['acd_setup_test', 'acd_setup_ext_sx', 'acd_step_test', 'acd_sim_test', 'acd_op_dryrun', 'acd_cauchy_op_adjtest', 'acd_trace_op_adjtest', 'acd3d_simd_test', 'acd_deriv2_op_adjtest', 'acd_deriv2_op_adjtest','acd_trace_deriv2_op_adjtest']
works = [];
for test in tests:
    works = works + [test + '.work']
    t=Flow([test + '.work'], ['csq', 'domecsq20m', 'source.su', 'data.su'], 
           '''
	   /bin/rm -rf ${TARGETS[0]}; 
           mkdir ${TARGETS[0]}; 
           cd ${TARGETS[0]}; 
           export CWPROOT='''+os.getenv('CWPROOT') + 
	   '; ../../main/' + test + 
	   '.x >& report.txt; cd ..',
	   stdin=-1,stdout=-1)
    Clean(t,test + '.work')

cmd = '/bin/rm -rf report.txt; echo "*** IWAVE GTEST REPORT ">> report.txt; date >> report.txt; echo " ">>report.txt; echo "===================================================" >> report.txt;  echo " ">>report.txt; cat ' + ".work/report.txt >> report.txt;  echo \" \">>report.txt; echo =================================================== >> report.txt; cat ".join(tests) + ".work/report.txt >> report.txt"

t=Flow(['report.txt'], works, cmd, stdin=-1, stdout=-1)
Clean(t,'report.txt')
