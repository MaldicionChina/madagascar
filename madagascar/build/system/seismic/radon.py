sfradon = rsf.doc.rsfprog('sfradon','system/seismic/Mradon.c','''High-resolution Radon transform. ''')
sfradon.par('offset',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfradon.par('adj',rsf.doc.rsfpar('bool','y','','''if y, perform adjoint operation '''))
sfradon.par('inv',rsf.doc.rsfpar('bool','adj','','''if y, perform inverse operation '''))
sfradon.par('spk',rsf.doc.rsfpar('bool','inv','','''if y, use spiking (hi-res) inversion '''))
sfradon.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfradon.par('np',rsf.doc.rsfpar('int','','','''number of p values (if adj=y) '''))
sfradon.par('dp',rsf.doc.rsfpar('float','','','''p sampling (if adj=y) '''))
sfradon.par('p0',rsf.doc.rsfpar('float','','','''p origin (if adj=y) '''))
sfradon.par('nx',rsf.doc.rsfpar('int','','','''number of offsets (if adj=n) '''))
sfradon.par('eps',rsf.doc.rsfpar('float','1.','',''''''))
sfradon.par('ns',rsf.doc.rsfpar('int','1','','''number of sharpening cycles '''))
sfradon.par('tol',rsf.doc.rsfpar('float','1.e-6','','''inversion tolerance '''))
sfradon.par('perc',rsf.doc.rsfpar('float','50.0','','''percentage for sharpening '''))
sfradon.par('ox',rsf.doc.rsfpar('float','','',''''''))
sfradon.par('dx',rsf.doc.rsfpar('float','','',''''''))
sfradon.par('parab',rsf.doc.rsfpar('bool','n','','''if y, parabolic Radon transform '''))
sfradon.par('x0',rsf.doc.rsfpar('float','1.','','''reference offset '''))
sfradon.par('niter',rsf.doc.rsfpar('int','100','',''''''))
sfradon.par('offset',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sfradon.version('1.7 Mradon.c 10624 2013-07-24 13:34:01Z sfomel')
sfradon.synopsis('''sfradon < in.rsf > out.rsf offset=offset.rsf adj=y inv=adj spk=inv verb=n np= dp= p0= nx= eps=1. ns=1 tol=1.e-6 perc=50.0 ox= dx= parab=n x0=1. niter=100''','''''')
rsf.doc.progs['sfradon']=sfradon

