sfrays2 = rsf.doc.rsfprog('sfrays2','system/seismic/Mrays2.c','''Ray tracing by a Runge-Kutta integrator.''')
sfrays2.par('shotfile',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfrays2.par('anglefile',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfrays2.par('vel',rsf.doc.rsfpar('bool','y','','''If y, input is velocity; if n, slowness '''))
sfrays2.par('order',rsf.doc.rsfpar('int','4','','''Interpolation order '''))
sfrays2.par('nt',rsf.doc.rsfpar('int','','','''Number of time steps '''))
sfrays2.par('dt',rsf.doc.rsfpar('float','','','''Sampling in time '''))
sfrays2.par('sym',rsf.doc.rsfpar('bool','y','','''if y, use symplectic integrator '''))
sfrays2.par('verb',rsf.doc.rsfpar('bool','y','','''Verbosity flag '''))
sfrays2.par('escvar',rsf.doc.rsfpar('bool','n','','''If y - output escape values, n - trajectories '''))
sfrays2.par('zshot',rsf.doc.rsfpar('float','0.','','''shot coordinates (if no shotfile) '''))
sfrays2.par('yshot',rsf.doc.rsfpar('float','o[1] + 0.5*(n[1]-1)*d[1]','',''''''))
sfrays2.par('nr',rsf.doc.rsfpar('int','','','''number of angles (if no anglefile) '''))
sfrays2.par('a0',rsf.doc.rsfpar('float','0.','','''minimum angle (if no anglefile) '''))
sfrays2.par('amax',rsf.doc.rsfpar('float','360.','','''maximum angle (if no anglefile) '''))
sfrays2.par('shotfile',rsf.doc.rsfpar('string ',desc='''file with shot locations (auxiliary input file name)'''))
sfrays2.par('anglefile',rsf.doc.rsfpar('string ',desc='''file with initial angles (auxiliary input file name)'''))
sfrays2.version('1.7')
sfrays2.synopsis('''sfrays2 < vel.rsf > rays.rsf shotfile=shots.rsf anglefile=angles.rsf vel=y order=4 nt= dt= sym=y verb=y escvar=n zshot=0. yshot=o[1] + 0.5*(n[1]-1)*d[1] nr= a0=0. amax=360. > rays.rsf''','''Rays can be plotted with sfplotrays.
''')
rsf.doc.progs['sfrays2']=sfrays2

