sfdots = rsf.doc.rsfprog('sfdots','plot/main/dots.c','''Plot signal with lollipops.''')
sfdots.par('labels',rsf.doc.rsfpar('strings','','','''trace labels  [n2]'''))
sfdots.par('dots',rsf.doc.rsfpar('int','(n1 <= 130)? 1: 0','','''type of dots: 1 - baloon, 0 - no dots, 2 - only for non-zero data '''))
sfdots.par('seemean',rsf.doc.rsfpar('bool','(bool) (n2 <= 30)','','''if y, draw axis lines '''))
sfdots.par('strings',rsf.doc.rsfpar('bool','(bool) (n1 <= 400)','','''if y, draw strings '''))
sfdots.par('connect',rsf.doc.rsfpar('int','1','','''connection type: 1 - diagonal, 2 - bar, 4 - only for non-zero data '''))
sfdots.par('corners',rsf.doc.rsfpar('int','','','''number of polygon corners (default is 6) '''))
sfdots.par('silk',rsf.doc.rsfpar('bool','n','','''if y, silky plot '''))
sfdots.par('gaineach',rsf.doc.rsfpar('bool','y','','''if y, gain each trace independently '''))
sfdots.par('labelsz',rsf.doc.rsfpar('int','8','','''label size '''))
sfdots.par('yreverse',rsf.doc.rsfpar('bool','n','','''if y, reverse y axis '''))
sfdots.par('constsep',rsf.doc.rsfpar('bool','n','','''if y, use constant trace separation '''))
sfdots.par('seedead',rsf.doc.rsfpar('bool','n','','''if y, show zero traces '''))
sfdots.par('transp',rsf.doc.rsfpar('bool','n','','''if y, transpose the axis '''))
sfdots.par('xxscale',rsf.doc.rsfpar('float','1.','','''x scaling '''))
sfdots.par('yyscale',rsf.doc.rsfpar('float','1.','','''y scaling '''))
sfdots.par('clip',rsf.doc.rsfpar('float','-1.','','''data clip '''))
sfdots.par('overlap',rsf.doc.rsfpar('float','0.9','','''trace overlap '''))
sfdots.par('screenratio',rsf.doc.rsfpar('float','VP_SCREEN_RATIO','','''screen aspect ratio '''))
sfdots.par('screenht',rsf.doc.rsfpar('float','VP_STANDARD_HEIGHT','','''screen height '''))
sfdots.par('screenwd',rsf.doc.rsfpar('float','screenhigh / screenratio','','''screen width '''))
sfdots.par('radius',rsf.doc.rsfpar('float','dd1/3','','''dot radius '''))
sfdots.par('font',rsf.doc.rsfpar('int','-1','','''font to use in text '''))
sfdots.par('label1',rsf.doc.rsfpar('float','','','''label for the axis '''))
sfdots.par('unit1',rsf.doc.rsfpar('string','','','''unit for the axis '''))
sfdots.par('title',rsf.doc.rsfpar('string','','','''plot title '''))
sfdots.par('label1',rsf.doc.rsfpar('string ',desc='''label for the axis'''))
sfdots.par('unit1',rsf.doc.rsfpar('string ',desc='''unit for the axis'''))
sfdots.par('title',rsf.doc.rsfpar('string ',desc='''plot title'''))
sfdots.version('1.7')
sfdots.synopsis('''sfdots < in.rsf labels= dots=(n1 <= 130)? 1: 0 seemean=(bool) (n2 <= 30) strings=(bool) (n1 <= 400) connect=1 corners= silk=n gaineach=y labelsz=8 yreverse=n constsep=n seedead=n transp=n xxscale=1. yyscale=1. clip=-1. overlap=0.9 screenratio=VP_SCREEN_RATIO screenht=VP_STANDARD_HEIGHT screenwd=screenhigh / screenratio radius=dd1/3 font=-1 label1= unit1= title= > plot.vpl''','''The axis is displayed only if label1= is present in the input
file or the command line.  
''')
rsf.doc.progs['sfdots']=sfdots

