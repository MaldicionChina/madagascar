sfgraph3 = rsf.doc.rsfprog('sfgraph3','plot/main/graph3.c','''Generate 3-D cube plot for surfaces.''')
sfgraph3.par('orient',rsf.doc.rsfpar('int','1','','''function orientation '''))
sfgraph3.par('yreverse',rsf.doc.rsfpar('bool','n','',''''''))
sfgraph3.par('min',rsf.doc.rsfpar('float','','','''minimum function value '''))
sfgraph3.par('max',rsf.doc.rsfpar('float','','','''maximum function value '''))
sfgraph3.par('point1',rsf.doc.rsfpar('float','0.5','','''fraction of the vertical axis for front face '''))
sfgraph3.par('point2',rsf.doc.rsfpar('float','0.5','','''fraction of the horizontal axis for front face '''))
sfgraph3.par('frame1',rsf.doc.rsfpar('float','0.5*(min+max)','',''''''))
sfgraph3.par('frame2',rsf.doc.rsfpar('int','n1-1','',''''''))
sfgraph3.par('frame3',rsf.doc.rsfpar('int','0','','''frame numbers for cube faces '''))
sfgraph3.par('movie',rsf.doc.rsfpar('int','0','','''0: no movie, 1: movie over axis 1, 2: axis 2, 3: axis 3 '''))
sfgraph3.par('dframe',rsf.doc.rsfpar('float','1','','''frame increment in a movie '''))
sfgraph3.par('n1pix',rsf.doc.rsfpar('int','n1/point1+n3/(1.-point1)','','''number of vertical pixels '''))
sfgraph3.par('n2pix',rsf.doc.rsfpar('int','n2/point2+n3/(1.-point2)','','''number of horizontal pixels '''))
sfgraph3.par('flat',rsf.doc.rsfpar('bool','y','','''if n, display perspective view '''))
sfgraph3.version('1.7')
sfgraph3.synopsis('''sfgraph3 < in.rsf orient=1 yreverse=n min= max= point1=0.5 point2=0.5 frame1=0.5*(min+max) frame2=n1-1 frame3=0 movie=0 dframe=1 n1pix=n1/point1+n3/(1.-point1) n2pix=n2/point2+n3/(1.-point2) flat=y > plot.vpl''','''''')
rsf.doc.progs['sfgraph3']=sfgraph3

