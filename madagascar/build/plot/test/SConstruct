import os, sys, string
sys.path.append('../../framework')
import bldutil

plots = '''
7ab cmp croshyp csp dc dcretard ellipse francis headray hyplay nmotraj
reflector reflexpt reflkine sg vrms whitepruf
'''

try:
	Import('env root pkgdir bindir')
	env = env.Clone()
except:
	env = bldutil.Debug()
	root = None
	SConscript('../lib/SConstruct')

libprefix = env.get('DYNLIB','')

env.Prepend(CPPPATH=['../../include'],
	    LIBPATH=['../../lib'],
	    LIBS=[libprefix+'rsfplot', libprefix+'rsf'])

vplot = Builder(action = './$SOURCE - > $TARGET',suffix='.vpl')
env.Append(BUILDERS = {'Vplot' : vplot})
env['PROGPREFIX'] = 'vp'

mains = []

for plot in Split(plots):
	if plot in ['reflexpt','reflkine']:
		env.Object(plot+'.o','reflector.c',
			   CPPDEFINES=env.get('CPPDEFINES',[]) +
			   [string.upper(plot)])
		prog = env.Program(plot+'.o')
	else:
		prog = env.Program(plot+'.c')
		mains.append(plot+'.c')
	if root:
		env.Install(bindir,prog)
	elif plot == 'sg':
		env.Command('geqs.vpl', prog,'./$SOURCE 1 > $TARGET')
		env.Command('geq2s.vpl',prog,'./$SOURCE 2 > $TARGET')
	else:
		env.Vplot(plot,prog)

######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:
	main = 'vpplot.py'
    
	docs = map(lambda prog: env.Doc(prog,rsfprefix='vp'),mains)
	docalias = {'vpreflexpt':'vpreflector',
		    'vpreflkine':'vpreflector'}
	doc = env.RSF_Docmerge(main,docs,alias=docalias)

	env.Install('../../framework/rsf',doc)
	env.Install(pkgdir,doc)

#####################################################################


# 	$Id: SConstruct 7107 2011-04-10 02:04:14Z ivlad $	
