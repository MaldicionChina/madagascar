sfsglfd1pml = rsf.doc.rsfprog('sfsglfd1pml','user/fangg/Msglfd1pml.c','''1-D Lowrank Finite-difference wave extrapolation ''')
sfsglfd1pml.par('vel',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfsglfd1pml.par('den',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfsglfd1pml.par('rec',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfsglfd1pml.par('G',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfsglfd1pml.par('sx',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfsglfd1pml.par('ic',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfsglfd1pml.par('presrc',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfsglfd1pml.par('velsrc',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfsglfd1pml.par('preinit',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfsglfd1pml.par('velinit',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfsglfd1pml.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity'''))
sfsglfd1pml.par('srcmms',rsf.doc.rsfpar('bool','n','','''source type: if y, use point source '''))
sfsglfd1pml.par('slx',rsf.doc.rsfpar('float','','','''source location in x '''))
sfsglfd1pml.par('srcdecay',rsf.doc.rsfpar('bool','n','','''source decay y=use'''))
sfsglfd1pml.par('srctrunc',rsf.doc.rsfpar('float','1000','','''source trunc time (s)'''))
sfsglfd1pml.par('inject',rsf.doc.rsfpar('bool','y','','''inject=y use inject source; inject=n use initial condition'''))
sfsglfd1pml.par('gdep',rsf.doc.rsfpar('float','0.0','','''depth of geophone '''))
sfsglfd1pml.par('snapinter',rsf.doc.rsfpar('int','1','','''snap interval '''))
sfsglfd1pml.par('pmlsize',rsf.doc.rsfpar('int','PMLOUT','','''size of PML layer '''))
sfsglfd1pml.par('pmld0',rsf.doc.rsfpar('int','PMLD0','','''PML parameter '''))
sfsglfd1pml.par('decay',rsf.doc.rsfpar('int','DECAY_FLAG','','''Flag of decay boundary condtion: 1 = use ; 0 = not use '''))
sfsglfd1pml.par('decaybegin',rsf.doc.rsfpar('int','DECAY_BEGIN','','''Begin time of using decay boundary condition '''))
sfsglfd1pml.par('freesurface',rsf.doc.rsfpar('bool','n','','''free surface'''))
sfsglfd1pml.version('1.7')
sfsglfd1pml.synopsis('''sfsglfd1pml < Fsrc.rsf vel=Fvel.rsf den=Fden.rsf > Fwf.rsf rec=Frec.rsf G=FG.rsf sx=Fsx.rsf ic=Fic.rsf presrc=Fpsrc.rsf velsrc=Fvsrc.rsf preinit=Fpint.rsf velinit=Fvint.rsf verb=n srcmms=n slx= srcdecay=n srctrunc=1000 inject=y gdep=0.0 snapinter=1 pmlsize=PMLOUT pmld0=PMLD0 decay=DECAY_FLAG decaybegin=DECAY_BEGIN freesurface=n''','''''')
rsf.doc.progs['sfsglfd1pml']=sfsglfd1pml

