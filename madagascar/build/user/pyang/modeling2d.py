sfmodeling2d = rsf.doc.rsfprog('sfmodeling2d','user/pyang/Mmodeling2d.c','''2-D forward modeling to generate shot records ''')
sfmodeling2d.par('time',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfmodeling2d.par('check',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfmodeling2d.par('chk',rsf.doc.rsfpar('bool','','',''''''))
sfmodeling2d.par('kt',rsf.doc.rsfpar('int','100','','''check it at it=100 '''))
sfmodeling2d.par('amp',rsf.doc.rsfpar('float','1000','','''maximum amplitude of ricker '''))
sfmodeling2d.par('fm',rsf.doc.rsfpar('float','10','','''dominant freq of ricker '''))
sfmodeling2d.par('dt',rsf.doc.rsfpar('float','','','''time interval '''))
sfmodeling2d.par('nt',rsf.doc.rsfpar('int','','','''total modeling time steps '''))
sfmodeling2d.par('ns',rsf.doc.rsfpar('int','','','''total shots '''))
sfmodeling2d.par('ng',rsf.doc.rsfpar('int','','','''total receivers in each shot '''))
sfmodeling2d.par('jsx',rsf.doc.rsfpar('int','','','''source x-axis  jump interval  '''))
sfmodeling2d.par('jsz',rsf.doc.rsfpar('int','0','','''source z-axis jump interval  '''))
sfmodeling2d.par('jgx',rsf.doc.rsfpar('int','1','','''receiver x-axis jump interval '''))
sfmodeling2d.par('jgz',rsf.doc.rsfpar('int','0','','''receiver z-axis jump interval '''))
sfmodeling2d.par('sxbeg',rsf.doc.rsfpar('int','','','''x-begining index of sources, starting from 0 '''))
sfmodeling2d.par('szbeg',rsf.doc.rsfpar('int','','','''z-begining index of sources, starting from 0 '''))
sfmodeling2d.par('gxbeg',rsf.doc.rsfpar('int','','','''x-begining index of receivers, starting from 0 '''))
sfmodeling2d.par('gzbeg',rsf.doc.rsfpar('int','','','''z-begining index of receivers, starting from 0 '''))
sfmodeling2d.par('csdgather',rsf.doc.rsfpar('bool','n','','''default, common shot-gather; if n, record at every point'''))
sfmodeling2d.version('1.7')
sfmodeling2d.synopsis('''sfmodeling2d < vinit.rsf > shots.rsf time=time.rsf check=check.rsf chk= kt=100 amp=1000 fm=10 dt= nt= ns= ng= jsx= jsz=0 jgx=1 jgz=0 sxbeg= szbeg= gxbeg= gzbeg= csdgather=n''','''Note: Clayton-Enquist absorbing boundary condition (A2) is applied!
 ''')
rsf.doc.progs['sfmodeling2d']=sfmodeling2d

