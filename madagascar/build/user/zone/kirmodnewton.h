/* This file is automatically generated. DO NOT EDIT! */

#ifndef _kirmodnewton_h
#define _kirmodnewton_h


#include "kirmod.h"
#include "general_traveltime.h"


void kirmodnewton_table(int vstatus /* Type of model (vconstant(0) or vgradient(1))*/,
			bool debug /* Debug Newton */,
			float xs /* Source */,
			float xr /* Receiver */,
			float bmin /* Min value in x-direction */,
			float bmax /* Max value in z-direction */,
			int niter /* Number of iteration for Newton */,
			double tol /* Tolerance level for Newton */,
			int n /* Number of reflection */,
			float *xinitial /* Initial guess of points of intersection */,
			float *xref /* x-coordinate reference points */,
			float *zref /* z-coorditnate reference points */,
			float *v /* Velocities at reference points */,
			float *gx /* x-gradient at the reference points */,
			float *gz /* z-gradeint at the reference points */,
			float **aniso /*anisotropy parameters*/, 
			func1 z /* z(k,x) */,
			func1 zder /* z'(k,x) */,
			func1 zder2 /* z''(k,x) */,
			float **oldans /* To export old answer*/,
			bool skip /* To tell the kirmodnewton2 to generate xinitial in the case where the previous ray can't be traced (can't fwdxini)*/,
			ktable table /* [5] output table */);
/*< Compute traveltime attributes >*/

#endif
