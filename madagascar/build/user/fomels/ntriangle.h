/* This file is automatically generated. DO NOT EDIT! */

#ifndef _ntriangle_h
#define _ntriangle_h


typedef struct NTriangle *ntriangle;
/* abstract data type */


ntriangle ntriangle_init (int nbox /* maximum triangle length */, 
			  int ndat /* data length */);
/*< initialize >*/


void nsmooth (ntriangle tr /* smoothing object */, 
	      int o, int d /* sampling */, 
	      bool der     /* derivative flag */, 
	      const int *t /* triangle lengths */, 
	      const int *s /* triangle shifts */,
	      float *x     /* data (smoothed in place) */);
/*< smooth >*/


void nsmooth2 (ntriangle tr /* smoothing object */, 
	       int o, int d /* sampling */, 
	       bool der     /* derivative flag */, 
	       const int *t /* triangle lengths */,
	       const int *s /* triangle shifts */,
	       float *x     /* data (smoothed in place) */);
/*< alternative smooth >*/


void  ntriangle_close(ntriangle tr);
/*< free allocated storage >*/

#endif
