sfanisolr2 = rsf.doc.rsfprog('sfanisolr2','user/fomels/Manisolr2.cc','''Lowrank decomposition for 2-D anisotropic wave propagation (Real number).''')
sfanisolr2.par('vels',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfanisolr2.par('fft',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfanisolr2.par('xtap',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfanisolr2.par('ktap',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfanisolr2.par('left',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfanisolr2.par('seed',rsf.doc.rsfpar('','time(NULL','',''''''))
sfanisolr2.par('eps',rsf.doc.rsfpar('','1.e-4','','''tolerance'''))
sfanisolr2.par('npk',rsf.doc.rsfpar('','20','','''maximum rank'''))
sfanisolr2.par('dt',rsf.doc.rsfpar('','','','''time step'''))
sfanisolr2.par('approx',rsf.doc.rsfpar('','2','','''Type of approximation (0=exact 1=zone 2=acoustic)'''))
sfanisolr2.par('relation',rsf.doc.rsfpar('','3','','''Type of q relationship (0=shale, 1=sand, 2=carbonate, default being smallest error)'''))
sfanisolr2.par('xtaper',rsf.doc.rsfpar('','false','','''if taper in x'''))
sfanisolr2.par('ktaper',rsf.doc.rsfpar('','false','','''if taper in k'''))
sfanisolr2.version('1.7')
sfanisolr2.synopsis('''sfanisolr2 < velz.rsf vels=vels.rsf fft=fft.rsf xtap=fxtap.rsf ktap=fktap.rsf left=left.rsf > right.rsf seed=time(NULL eps=1.e-4 npk=20 dt= approx=2 relation=3 xtaper=false ktaper=false''','''''')
rsf.doc.progs['sfanisolr2']=sfanisolr2

