sfwarp1 = rsf.doc.rsfprog('sfwarp1','user/fomels/Mwarp1.c','''Multicomponent data registration by 1-D warping. ''')
sfwarp1.par('other',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfwarp1.par('warpout',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfwarp1.par('amplout',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfwarp1.par('warpin',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfwarp1.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfwarp1.par('noamp',rsf.doc.rsfpar('bool','n','','''if y, don't correct amplitudes '''))
sfwarp1.par('accuracy',rsf.doc.rsfpar('int','','[1-4]','''interpolation accuracy '''))
sfwarp1.par('nliter',rsf.doc.rsfpar('int','10','','''number of non-linear iterations '''))
sfwarp1.par('niter',rsf.doc.rsfpar('int','100','','''maximum number of linear iterations '''))
sfwarp1.par('warpin',rsf.doc.rsfpar('string ',desc='''optional initial warp file (auxiliary input file name)'''))
sfwarp1.version('1.7 Mwarp1.c 13985 2015-03-26 13:56:59Z sfomel')
sfwarp1.synopsis('''sfwarp1 < in.rsf > warped.rsf other=other.rsf warpout=warpout.rsf amplout=amplout.rsf warpin=warpin.rsf verb=n noamp=n accuracy= nliter=10 niter=100''','''''')
rsf.doc.progs['sfwarp1']=sfwarp1

