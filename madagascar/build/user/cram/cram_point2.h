/* This file is automatically generated. DO NOT EDIT! */

#ifndef _cram_point2_h
#define _cram_point2_h


#include "cram_data2.h"
/*^*/
#include "cram_survey2.h"
/*^*/
#include "cram_slowness2.h"
/*^*/
#include "cram_rbranch2.h"


typedef struct CRAMPoint2 *sf_cram_point2;
/* abstract data type */


sf_cram_point2 sf_cram_point2_init (int na, float a0, float da,
                                    sf_cram_data2 data, sf_cram_survey2 survey,
                                    sf_cram_slowness2 slowness, sf_cram_rbranch2 rbranch);
/*< Initialize object >*/


void sf_cram_point2_close (sf_cram_point2 cram_point);
/*< Destroy object >*/


void sf_cram_point2_set_mute (sf_cram_point2 cram_point, float oaz, float daz);
/*< Set mute limits in constant z plane >*/


void sf_cram_point2_set_taper (sf_cram_point2 cram_point, int ts, int th);
/*< Set tapering length >*/


void sf_cram_point2_set_shmax (sf_cram_point2 cram_point, float smax, float hmax);
/*< Set maximum allowed width of shot and receiver ray branches >*/


float** sf_cram_point2_get_image (sf_cram_point2 cram_point, float ***sqimg, int ***hits,
                                  float *amax);
/*< Return pointers to internal arrays of image samples >*/


void sf_cram_point2_compute (sf_cram_point2 cram_point,
                             float z, float x, float **esc);
/*< Compute image for one point (z,x) and a correpsonding set of escape values >*/

#endif
