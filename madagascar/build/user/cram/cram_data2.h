/* This file is automatically generated. DO NOT EDIT! */

#ifndef _cram_data2_h
#define _cram_data2_h


typedef struct CRAMData2 *sf_cram_data2;
/* abstract data type */


typedef struct {
    size_t id;    /* Message ID */
    size_t i, n;  /* Index of the first trace, number of traces */
} sf_cram_data_trreq;
/* Structure for requesting several traces */


typedef struct {
    size_t id;        /* Message ID */
    size_t n;         /* Number of received traces */
    float *samples;   /* Trace samples */
} sf_cram_data_trvals;
/* Structure for getting requested traces back */


#define CRAM_TRBUF 10


sf_cram_data2 sf_cram_data2_init (sf_file data, sf_file ddaemon);
/*< Initialize object >*/


void sf_cram_data2_close (sf_cram_data2 cram_data);
/*< Destroy object >*/


bool sf_cram_data2_get_erefl (sf_cram_data2 cram_data);
/*< Return true if data is from exploding reflector modeling >*/


float sf_cram_data2_get_sample (sf_cram_data2 cram_data, size_t i, float t,
                                float p, float dx, int kmah, int *hits);
/*< Get one sample for trace i, time t, slope p, and spatial sampling dx >*/

#endif
