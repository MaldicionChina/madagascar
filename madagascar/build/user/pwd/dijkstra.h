/* This file is automatically generated. DO NOT EDIT! */

#ifndef _dijkstra_h
#define _dijkstra_h


#include <rsf.h>


void dijkstra_init(int m1, int m2, 
		   float **udcost  /* up-down cost */, 
		   float ** lrcost /* left-right cost */);
/*< initialize with model size >*/


void dijkstra_close(void);
/*< free allocated storage >*/


void dijkstra_source(int s1, int s2);
/*< initialize source >*/


bool dijskstra_step(int *i1, int *i2, int *ud, int *lr);
/*< one step of the algorithm, true on success >*/


void dijkstra_start(int s1, int s2);
/*< intialize path >*/


bool dijkstra_next(int *ud, int *lr);
/*< find the next shift (up-down, left-right), return true on success >*/


void dijkstra_cost(sf_file out);
/*< write cost function >*/

#endif
