/* This file is automatically generated. DO NOT EDIT! */

#ifndef _neighbors_h
#define _neighbors_h


#include <rsf.h>


void neighbors_init (int *in1     /* status flag [n[0]*n[1]*n[2]] */, 
		     float *rdx1  /* grid sampling [3] */, 
		     int *n1      /* grid samples [3] */, 
		     int order1   /* accuracy order */, 
		     float *time1 /* traveltime [n[0]*n[1]*n[2]] */);
/*< Initialize >*/


int  neighbours(int i);
/*< Update neighbors of gridpoint i, return number of updated points >*/


int  neighbours2(int i);
/*< Update neighbors of gridpoint i, return number of updated points >*/


int neighbors_distance(int np         /* number of points */,
		       float *vv1     /* slowness squared */,
		       float **points /* point coordinates[np][3] */,
		       float *d       /* grid sampling [3] */,
		       float *o       /* grid origin [3] */);
/*< initialize distance computation >*/


int nearsource(float* xs   /* source location [3] */, 
	       int* b      /* constant-velocity box around it [3] */, 
	       float* d    /* grid sampling [3] */, 
	       float* vv1  /* slowness [n[0]*n[1]*n[2]] */, 
	       bool *plane /* if plane-wave source */);
/*< initialize the source >*/


int surface(float* vv1  /* slowness [n[0]*n[1]*n[2]] */,
	    float* tt0  /* surface traveltime [n[1]*n[2]] */);
/*< initialize the source >*/

#endif
