import rsf.doc

sfawefd2dds = rsf.doc.rsfprog('sfawefd2dds','user/tariq/Mawefd2dds.c','''2D acoustic time-domain FD modeling  for source perturbation -first order''')
sfawefd2dds.par('vel',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfawefd2dds.par('sou',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfawefd2dds.par('rec',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfawefd2dds.par('wfl',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfawefd2dds.par('den',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfawefd2dds.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfawefd2dds.par('snap',rsf.doc.rsfpar('bool','n','','''wavefield snapshots flag '''))
sfawefd2dds.par('free',rsf.doc.rsfpar('bool','n','','''free surface flag '''))
sfawefd2dds.par('expl',rsf.doc.rsfpar('bool','n','','''"exploding reflector" '''))
sfawefd2dds.par('dabc',rsf.doc.rsfpar('bool','n','','''absorbing BC '''))
sfawefd2dds.par('dl',rsf.doc.rsfpar('float','0.0','','''dl=0.0  perturbation distance '''))
sfawefd2dds.par('jdata',rsf.doc.rsfpar('int','1','',''''''))
sfawefd2dds.par('jsnap',rsf.doc.rsfpar('int','nt','',''''''))
sfawefd2dds.par('nqz',rsf.doc.rsfpar('int','sf_n(az)','',''''''))
sfawefd2dds.par('nqx',rsf.doc.rsfpar('int','sf_n(ax)','',''''''))
sfawefd2dds.par('oqz',rsf.doc.rsfpar('float','sf_o(az)','',''''''))
sfawefd2dds.par('oqx',rsf.doc.rsfpar('float','sf_o(ax)','',''''''))
sfawefd2dds.version('1.7')
sfawefd2dds.synopsis('''sfawefd2dds < Fwav.rsf vel=Fvel.rsf sou=Fsou.rsf rec=Frec.rsf wfl=Fwfl.rsf > Fdat.rsf den=Fden.rsf verb=n snap=n free=n expl=n dabc=n dl=0.0 jdata=1 jsnap=nt nqz=sf_n(az) nqx=sf_n(ax) oqz=sf_o(az) oqx=sf_o(ax)''','''''')
rsf.doc.progs['sfawefd2dds']=sfawefd2dds

sfawefd2dds2nd = rsf.doc.rsfprog('sfawefd2dds2nd','user/tariq/Mawefd2dds2nd.c','''2D acoustic time-domain FD modeling  for source perturbation- 2nd order approximation''')
sfawefd2dds2nd.par('vel',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfawefd2dds2nd.par('sou',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfawefd2dds2nd.par('rec',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfawefd2dds2nd.par('wfl',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfawefd2dds2nd.par('den',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfawefd2dds2nd.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfawefd2dds2nd.par('snap',rsf.doc.rsfpar('bool','n','','''wavefield snapshots flag '''))
sfawefd2dds2nd.par('free',rsf.doc.rsfpar('bool','n','','''free surface flag '''))
sfawefd2dds2nd.par('expl',rsf.doc.rsfpar('bool','n','','''"exploding reflector" '''))
sfawefd2dds2nd.par('dabc',rsf.doc.rsfpar('bool','n','','''absorbing BC '''))
sfawefd2dds2nd.par('dl',rsf.doc.rsfpar('float','0.0','','''dl=0.0  perturbation distance '''))
sfawefd2dds2nd.par('jdata',rsf.doc.rsfpar('int','1','',''''''))
sfawefd2dds2nd.par('jsnap',rsf.doc.rsfpar('int','nt','',''''''))
sfawefd2dds2nd.par('nqz',rsf.doc.rsfpar('int','sf_n(az)','',''''''))
sfawefd2dds2nd.par('nqx',rsf.doc.rsfpar('int','sf_n(ax)','',''''''))
sfawefd2dds2nd.par('oqz',rsf.doc.rsfpar('float','sf_o(az)','',''''''))
sfawefd2dds2nd.par('oqx',rsf.doc.rsfpar('float','sf_o(ax)','',''''''))
sfawefd2dds2nd.version('1.7')
sfawefd2dds2nd.synopsis('''sfawefd2dds2nd < Fwav.rsf vel=Fvel.rsf sou=Fsou.rsf rec=Frec.rsf wfl=Fwfl.rsf > Fdat.rsf den=Fden.rsf verb=n snap=n free=n expl=n dabc=n dl=0.0 jdata=1 jsnap=nt nqz=sf_n(az) nqx=sf_n(ax) oqz=sf_o(az) oqx=sf_o(ax)''','''''')
rsf.doc.progs['sfawefd2dds2nd']=sfawefd2dds2nd

sfeikds = rsf.doc.rsfprog('sfeikds','user/tariq/Meikds.c','''Source differntial eikonal solver (3-D). ''')
sfeikds.par('shotfile',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfeikds.par('btime',rsf.doc.rsfpar('bool','y','','''if y, the input is background time; n, Velocity '''))
sfeikds.par('order',rsf.doc.rsfpar('int','2','[1,2]','''Accuracy order '''))
sfeikds.par('sorder',rsf.doc.rsfpar('int','2','[1,2,3]','''Accuracy order of the source perturbation'''))
sfeikds.par('dl',rsf.doc.rsfpar('float','0.0','','''The value of the shift in the y direction '''))
sfeikds.par('br1',rsf.doc.rsfpar('float','d1','',''''''))
sfeikds.par('br2',rsf.doc.rsfpar('float','d2','',''''''))
sfeikds.par('br3',rsf.doc.rsfpar('float','d3','','''Constant-velocity box around the source (in physical dimensions) '''))
sfeikds.par('plane1',rsf.doc.rsfpar('bool','n','',''''''))
sfeikds.par('plane2',rsf.doc.rsfpar('bool','n','',''''''))
sfeikds.par('plane3',rsf.doc.rsfpar('bool','n','','''plane-wave source '''))
sfeikds.par('b1',rsf.doc.rsfpar('int','plane[2]? n1: (int) (br1/d1+0.5)','',''''''))
sfeikds.par('b2',rsf.doc.rsfpar('int','plane[1]? n2: (int) (br2/d2+0.5)','',''''''))
sfeikds.par('b3',rsf.doc.rsfpar('int','plane[0]? n3: (int) (br3/d3+0.5)','','''Constant-velocity box around the source (in samples) '''))
sfeikds.par('zshot',rsf.doc.rsfpar('float','0.','','''Shot location (used if no shotfile) '''))
sfeikds.par('yshot',rsf.doc.rsfpar('float','o2 + 0.5*(n2-1)*d2','',''''''))
sfeikds.par('xshot',rsf.doc.rsfpar('float','o3 + 0.5*(n3-1)*d3','',''''''))
sfeikds.par('shotfile',rsf.doc.rsfpar('string ',desc='''File with shot locations (n2=number of shots, n1=3) (auxiliary input file name)'''))
sfeikds.version('1.7 Meikds.c 4136 2009-02-07 17:20:32Z sfomel')
sfeikds.synopsis('''sfeikds < btime.rsf > time.rsf shotfile=shots.rsf btime=y order=2 sorder=2 dl=0.0 br1=d1 br2=d2 br3=d3 plane1=n plane2=n plane3=n b1=plane[2]? n1: (int) (br1/d1+0.5) b2=plane[1]? n2: (int) (br2/d2+0.5) b3=plane[0]? n3: (int) (br3/d3+0.5) zshot=0. yshot=o2 + 0.5*(n2-1)*d2 xshot=o3 + 0.5*(n3-1)*d3''','''''')
rsf.doc.progs['sfeikds']=sfeikds

sfeikEta = rsf.doc.rsfprog('sfeikEta','user/tariq/MeikEta.c','''Eta differential eikonal solver (3-D). ''')
sfeikEta.par('shotfile',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfeikEta.par('btime',rsf.doc.rsfpar('bool','y','','''if y, the input is background time; n, Velocity '''))
sfeikEta.par('order',rsf.doc.rsfpar('int','2','[1,2]','''Accuracy order '''))
sfeikEta.par('sorder',rsf.doc.rsfpar('int','2','[1,2,3]','''Accuracy order of the source perturbation'''))
sfeikEta.par('eta',rsf.doc.rsfpar('float','0.0','','''The value of the constant eta '''))
sfeikEta.par('br1',rsf.doc.rsfpar('float','d1','',''''''))
sfeikEta.par('br2',rsf.doc.rsfpar('float','d2','',''''''))
sfeikEta.par('br3',rsf.doc.rsfpar('float','d3','','''Constant-velocity box around the source (in physical dimensions) '''))
sfeikEta.par('plane1',rsf.doc.rsfpar('bool','n','',''''''))
sfeikEta.par('plane2',rsf.doc.rsfpar('bool','n','',''''''))
sfeikEta.par('plane3',rsf.doc.rsfpar('bool','n','','''plane-wave source '''))
sfeikEta.par('b1',rsf.doc.rsfpar('int','plane[2]? n1: (int) (br1/d1+0.5)','',''''''))
sfeikEta.par('b2',rsf.doc.rsfpar('int','plane[1]? n2: (int) (br2/d2+0.5)','',''''''))
sfeikEta.par('b3',rsf.doc.rsfpar('int','plane[0]? n3: (int) (br3/d3+0.5)','','''Constant-velocity box around the source (in samples) '''))
sfeikEta.par('zshot',rsf.doc.rsfpar('float','0.','','''Shot location (used if no shotfile) '''))
sfeikEta.par('yshot',rsf.doc.rsfpar('float','o2 + 0.5*(n2-1)*d2','',''''''))
sfeikEta.par('xshot',rsf.doc.rsfpar('float','o3 + 0.5*(n3-1)*d3','',''''''))
sfeikEta.par('shotfile',rsf.doc.rsfpar('string ',desc='''File with shot locations (n2=number of shots, n1=3) (auxiliary input file name)'''))
sfeikEta.version('1.7 Meikds.c 4136 2009-02-07 17:20:32Z sfomel')
sfeikEta.synopsis('''sfeikEta < btime.rsf > time.rsf shotfile=shots.rsf btime=y order=2 sorder=2 eta=0.0 br1=d1 br2=d2 br3=d3 plane1=n plane2=n plane3=n b1=plane[2]? n1: (int) (br1/d1+0.5) b2=plane[1]? n2: (int) (br2/d2+0.5) b3=plane[0]? n3: (int) (br3/d3+0.5) zshot=0. yshot=o2 + 0.5*(n2-1)*d2 xshot=o3 + 0.5*(n3-1)*d3''','''''')
rsf.doc.progs['sfeikEta']=sfeikEta

sfScanCoef = rsf.doc.rsfprog('sfScanCoef','user/tariq/MScanCoef.c','''Coeffecients of the eta expansion eikonal solver (3-D). ''')
sfScanCoef.par('shotfile',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfScanCoef.par('btime',rsf.doc.rsfpar('bool','y','','''if y, the input is background time; n, Velocity '''))
sfScanCoef.par('order',rsf.doc.rsfpar('int','2','[1,2]','''Accuracy order '''))
sfScanCoef.par('br1',rsf.doc.rsfpar('float','d1','',''''''))
sfScanCoef.par('br2',rsf.doc.rsfpar('float','d2','',''''''))
sfScanCoef.par('br3',rsf.doc.rsfpar('float','d3','','''Constant-velocity box around the source (in physical dimensions) '''))
sfScanCoef.par('plane1',rsf.doc.rsfpar('bool','n','',''''''))
sfScanCoef.par('plane2',rsf.doc.rsfpar('bool','n','',''''''))
sfScanCoef.par('plane3',rsf.doc.rsfpar('bool','n','','''plane-wave source '''))
sfScanCoef.par('b1',rsf.doc.rsfpar('int','plane[2]? n1: (int) (br1/d1+0.5)','',''''''))
sfScanCoef.par('b2',rsf.doc.rsfpar('int','plane[1]? n2: (int) (br2/d2+0.5)','',''''''))
sfScanCoef.par('b3',rsf.doc.rsfpar('int','plane[0]? n3: (int) (br3/d3+0.5)','','''Constant-velocity box around the source (in samples) '''))
sfScanCoef.par('zshot',rsf.doc.rsfpar('float','0.','','''Shot location (used if no shotfile) '''))
sfScanCoef.par('yshot',rsf.doc.rsfpar('float','o2 + 0.5*(n2-1)*d2','',''''''))
sfScanCoef.par('xshot',rsf.doc.rsfpar('float','o3 + 0.5*(n3-1)*d3','',''''''))
sfScanCoef.par('t1',rsf.doc.rsfpar('string ',desc=''''''))
sfScanCoef.par('t2',rsf.doc.rsfpar('string ',desc=''''''))
sfScanCoef.par('shotfile',rsf.doc.rsfpar('string ',desc='''File with shot locations (n2=number of shots, n1=3) (auxiliary input file name)'''))
sfScanCoef.version('1.7 MScanCoef.c 4136 2009-02-07 17:20:32Z sfomel')
sfScanCoef.synopsis('''sfScanCoef < btime.rsf > time.rsf shotfile=shots.rsf btime=y order=2 br1=d1 br2=d2 br3=d3 plane1=n plane2=n plane3=n b1=plane[2]? n1: (int) (br1/d1+0.5) b2=plane[1]? n2: (int) (br2/d2+0.5) b3=plane[0]? n3: (int) (br3/d3+0.5) zshot=0. yshot=o2 + 0.5*(n2-1)*d2 xshot=o3 + 0.5*(n3-1)*d3 t1= t2=''','''''')
rsf.doc.progs['sfScanCoef']=sfScanCoef

sfwkbjTI = rsf.doc.rsfprog('sfwkbjTI','user/tariq/MwkbjTI.c','''VTI eikonal solver (3-D). ''')
sfwkbjTI.par('shotfile',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfwkbjTI.par('br1',rsf.doc.rsfpar('float','d1','',''''''))
sfwkbjTI.par('br2',rsf.doc.rsfpar('float','d2','',''''''))
sfwkbjTI.par('br3',rsf.doc.rsfpar('float','d3','','''Constant-velocity box around the source (in physical dimensions) '''))
sfwkbjTI.par('plane1',rsf.doc.rsfpar('bool','n','',''''''))
sfwkbjTI.par('plane2',rsf.doc.rsfpar('bool','n','',''''''))
sfwkbjTI.par('plane3',rsf.doc.rsfpar('bool','n','','''plane-wave source '''))
sfwkbjTI.par('b1',rsf.doc.rsfpar('int','plane[2]? n1: (int) (br1/d1+0.5)','',''''''))
sfwkbjTI.par('b2',rsf.doc.rsfpar('int','plane[1]? n2: (int) (br2/d2+0.5)','',''''''))
sfwkbjTI.par('b3',rsf.doc.rsfpar('int','plane[0]? n3: (int) (br3/d3+0.5)','','''Constant-velocity box around the source (in samples) '''))
sfwkbjTI.par('zshot',rsf.doc.rsfpar('float','0.','','''Shot location (used if no shotfile) '''))
sfwkbjTI.par('yshot',rsf.doc.rsfpar('float','o2 + 0.5*(n2-1)*d2','',''''''))
sfwkbjTI.par('xshot',rsf.doc.rsfpar('float','o3 + 0.5*(n3-1)*d3','',''''''))
sfwkbjTI.par('vv',rsf.doc.rsfpar('string ',desc=''''''))
sfwkbjTI.par('eta',rsf.doc.rsfpar('string ',desc=''''''))
sfwkbjTI.par('shotfile',rsf.doc.rsfpar('string ',desc='''File with shot locations (n2=number of shots, n1=3) (auxiliary input file name)'''))
sfwkbjTI.version('1.7 MwkbjTI.c 4136 2009-02-07 17:20:32Z sfomel')
sfwkbjTI.synopsis('''sfwkbjTI < bv.rsf > time.rsf shotfile=shots.rsf br1=d1 br2=d2 br3=d3 plane1=n plane2=n plane3=n b1=plane[2]? n1: (int) (br1/d1+0.5) b2=plane[1]? n2: (int) (br2/d2+0.5) b3=plane[0]? n3: (int) (br3/d3+0.5) zshot=0. yshot=o2 + 0.5*(n2-1)*d2 xshot=o3 + 0.5*(n3-1)*d3 vv= eta=''','''''')
rsf.doc.progs['sfwkbjTI']=sfwkbjTI

