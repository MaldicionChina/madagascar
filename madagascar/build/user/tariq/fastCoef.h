/* This file is automatically generated. DO NOT EDIT! */

#ifndef _fastCoef_h
#define _fastCoef_h


#include <rsf.h>


void fastm_init (int n3,int n2,int n1);
/*< Initialize data dimensions >*/


void fastm (float* time                /* time */, 
	    float* v                   /* slowness */, 
	    int* in                    /* in/front/out flag */, 
	    bool* plane                /* if plane source */,
	    int   n3,  int n2,  int n1 /* dimensions */,
	    float o3,float o2,float o1 /* origin */,
	    float d3,float d2,float d1 /* sampling */,
	    float s3,float s2,float s1 /* source */,
	    int   b3,  int b2,  int b1 /* box around the source */,
	    int order                  /* accuracy order (1,2,3) */);
/*< Run fast marching eikonal solver >*/


void fastm_close (void);
/*< Free allocated storage >*/


/* Numerically solving the differential source linear equation */
void fastCoef (float* time                /* time */, 
	       float* t1                /* t1 coeffecients */, 
	       float* t2                /* t2 coeffecients */, 
	       float* v                   /* slowness */, 
	       int* in                    /* in/front/out flag */, 
	       bool* plane                /* if plane source */,
	       int   nn3,  int nn2,  int nn1 /* dimensions */,
	       float o3,float o2,float o1 /* origin */,
	       float dd3,float dd2,float dd1 /* sampling */,
	       float s3,float s2,float s1 /* source */,
	       int   b3,  int b2,  int b1 /* box around the source */,
	       int order                  /* accuracy order (1,2,3) */);
/*< Run fast marching eikonal solver >*/

#endif
