/* This file is automatically generated. DO NOT EDIT! */

#ifndef _interp_h
#define _interp_h


typedef struct {
    int nz; float z0,dz,*z; /* mesh */
    int nx; float x0,dx,*x;
} Int2;


Int2 *int2_init(const int   *n, /* {nz,nx} */
                const float *o, /* {z0,x0} */
                const float *d  /* {dz,dx} */);
/*< >*/


void int2_apply(float *F,       /* [m] */
                const float *f, /* [nx][nz] */
                int m,
                const float *c, /* [m][2] coord */
                const Int2 *I2);
/*< evaluate f at c, return as F. >*/


void int2_inject(const float *F, /* [m] */
                 float *f,       /* [nx][nz] */
                 int m,
                 const float *c, /* [m][2] coord */
                 const Int2 *I2);
/*< update f using value F at c >*/


void int2_inject2(const float *F, /* [m] */
                  float *f,       /* [nx][nz] */
                  int m,
                  const float *c, /* [m][2] coord */
                  const Int2 *I2);
/*< set f using value F at c >*/


void int2_free(Int2 *I2);
/*< >*/

#endif
