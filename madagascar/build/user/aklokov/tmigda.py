sftmigda = rsf.doc.rsfprog('sftmigda','user/aklokov/Mtmigda.cc','''3D time scattering-angle Kirchhoff migration  ''')
sftmigda.par('vel',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sftmigda.par('semb',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sftmigda.par('dag',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sftmigda.par('cig',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sftmigda.par('is3d',rsf.doc.rsfpar('bool','n','','''if y, apply 3D migration '''))
sftmigda.par('axis2label',rsf.doc.rsfpar('int','0','','''0 - shot; 1 - cmp; 2 - receiver '''))
sftmigda.par('isAA',rsf.doc.rsfpar('bool','y','','''if y, apply anti-aliasing '''))
sftmigda.par('isDipAz',rsf.doc.rsfpar('bool','y','','''if y, apply dip/azimuth mode; if n, apply inline/crossline angle mode '''))
sftmigda.par('hmign',rsf.doc.rsfpar('int','dp.hNum','','''number of migrated offsets '''))
sftmigda.par('sembWindow',rsf.doc.rsfpar('int','11','','''vertical window for semblance calculation (in samples) '''))
sftmigda.par('edgeTaper',rsf.doc.rsfpar('float','5.f','','''edge taper for dip-angle gathers (in degree) '''))
sftmigda.par('itn',rsf.doc.rsfpar('int','dp.zNum','','''number of imaged times '''))
sftmigda.par('ixn',rsf.doc.rsfpar('int','dp.xNum','','''number of imaged inlines '''))
sftmigda.par('iyn',rsf.doc.rsfpar('int','rp.is3D ? vp.yNum : 1','','''number of imaged crosslines '''))
sftmigda.par('ito',rsf.doc.rsfpar('float','dp.zStart','','''first imaged time (in ms) '''))
sftmigda.par('ixo',rsf.doc.rsfpar('float','dp.xStart','','''first imaged inline '''))
sftmigda.par('iyo',rsf.doc.rsfpar('float','dp.yStart','','''first imaged crossline '''))
sftmigda.par('itd',rsf.doc.rsfpar('float','dp.zStep','','''step in imaged times  (in ms) '''))
sftmigda.par('ixd',rsf.doc.rsfpar('float','dp.xStep','','''step in imaged inlines '''))
sftmigda.par('iyd',rsf.doc.rsfpar('float','dp.yStep','','''step in imaged crosslines '''))
sftmigda.par('dipn',rsf.doc.rsfpar('int','1','','''number of dip-angles '''))
sftmigda.par('sdipn',rsf.doc.rsfpar('int','1','','''number of secondary (azimuth or crossline) angles '''))
sftmigda.par('dipo',rsf.doc.rsfpar('float','0.f','','''first dip-angle '''))
sftmigda.par('sdipo',rsf.doc.rsfpar('float','90.f','','''first secondary (azimuth or crossline) angle '''))
sftmigda.par('dipd',rsf.doc.rsfpar('float','1.f','','''step in dip-angle '''))
sftmigda.par('sdipd',rsf.doc.rsfpar('float','1.f','','''step in secondary (azimuth or crossline) angle '''))
sftmigda.par('vel',rsf.doc.rsfpar('string ',desc='''velocity model file (velocity in m/s) (auxiliary input file name)'''))
sftmigda.par('semb',rsf.doc.rsfpar('string ',desc='''output file containing semblance measure of CIGs stacking (auxiliary output file name)'''))
sftmigda.par('dag',rsf.doc.rsfpar('string ',desc='''output file containing CIGs in the dip-angle domain (auxiliary output file name)'''))
sftmigda.par('cig',rsf.doc.rsfpar('string ',desc='''output file containing CIGs in the surface-offset domain (auxiliary output file name)'''))
sftmigda.version('1.7')
sftmigda.synopsis('''sftmigda < dataFile.rsf vel=velFile.rsf > imageFile.rsf semb=sembFile.rsf dag=dagFile.rsf cig=cigFile.rsf is3d=n axis2label=0 isAA=y isDipAz=y hmign=dp.hNum sembWindow=11 edgeTaper=5.f itn=dp.zNum ixn=dp.xNum iyn=rp.is3D ? vp.yNum : 1 ito=dp.zStart ixo=dp.xStart iyo=dp.yStart itd=dp.zStep ixd=dp.xStep iyd=dp.yStep dipn=1 sdipn=1 dipo=0.f sdipo=90.f dipd=1.f sdipd=1.f''','''''')
rsf.doc.progs['sftmigda']=sftmigda

