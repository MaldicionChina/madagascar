/* This file is automatically generated. DO NOT EDIT! */

#ifndef _ompfft_h
#define _ompfft_h


#include <rsf.h>


#include "weutil.h"


/*------------------------------------------------------------*/
fft2d ompfft2_init(cub3d cub,
		   int n1_, 
		   int n2_);
/*< initialize >*/


/*------------------------------------------------------------*/
fft3d ompfft3_init(cub3d cub,
		   int n1_, 
		   int n2_,
		   int n3_);
/*< initialize >*/


/*------------------------------------------------------------*/
void ompfft2_close(fft2d fft);
/*< Free allocated storage >*/


/*------------------------------------------------------------*/
void ompfft3_close(fft3d fft);
/*< Free allocated storage >*/


/*------------------------------------------------------------*/
void ompfft2(bool inv          /* inverse/forward flag */, 
	     kiss_fft_cpx **pp /* [1...n2][1...n1] */,
	     int ompith,
	     fft2d fft);
/*< Apply 2-D FFT >*/


/*------------------------------------------------------------*/
void ompfft3(bool inv          /* inverse/forward flag */, 
	     kiss_fft_cpx ***pp /* [n1][n2][n3] */,
	     int ompith,
	     fft3d fft);
/*< Apply 3-D FFT >*/


/*------------------------------------------------------------*/
void ompsft2_init(float o1, 
		  float d1, 
		  float o2, 
		  float d2,
		  fft2d fft);
/*< origin shift >*/


/*------------------------------------------------------------*/
void ompsft2_close(fft2d fft);
/*< close shift >*/


/*------------------------------------------------------------*/
void ompsft2(sf_complex **pp,
	     fft2d fft);
/*< apply shift >*/


/*------------------------------------------------------------*/
void ompcnt2(sf_complex **pp,
	     fft2d fft);
/*< apply centering >*/

#endif
