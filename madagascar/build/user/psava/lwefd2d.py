sflwefd2d = rsf.doc.rsfprog('sflwefd2d','user/psava/Mlwefd2d.c','''linearized acoustic time-domain FD modeling ''')
sflwefd2d.par('sou',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sflwefd2d.par('rec',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sflwefd2d.par('vel',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sflwefd2d.par('den',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sflwefd2d.par('ref',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sflwefd2d.par('wfl',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sflwefd2d.par('liw',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sflwefd2d.par('lid',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sflwefd2d.par('ompchunk',rsf.doc.rsfpar('int','1','','''OpenMP data chunk size '''))
sflwefd2d.par('ompnth',rsf.doc.rsfpar('int','0','','''OpenMP available threads '''))
sflwefd2d.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sflwefd2d.par('snap',rsf.doc.rsfpar('bool','n','','''wavefield snapshots flag '''))
sflwefd2d.par('free',rsf.doc.rsfpar('bool','n','','''free surface flag '''))
sflwefd2d.par('expl',rsf.doc.rsfpar('bool','n','','''"exploding reflector" '''))
sflwefd2d.par('jdata',rsf.doc.rsfpar('int','1','',''''''))
sflwefd2d.par('jsnap',rsf.doc.rsfpar('int','nt','',''''''))
sflwefd2d.par('nqz',rsf.doc.rsfpar('int','sf_n(a1)','',''''''))
sflwefd2d.par('nqx',rsf.doc.rsfpar('int','sf_n(a2)','',''''''))
sflwefd2d.par('oqz',rsf.doc.rsfpar('float','sf_o(a1)','',''''''))
sflwefd2d.par('oqx',rsf.doc.rsfpar('float','sf_o(a2)','',''''''))
sflwefd2d.version('1.7')
sflwefd2d.synopsis('''sflwefd2d < Fwav.rsf sou=Fsou.rsf rec=Frec.rsf vel=Fvel.rsf den=Fden.rsf ref=Fref.rsf wfl=Fwfl.rsf > Fdat.rsf liw=Fliw.rsf lid=Flid.rsf ompchunk=1 ompnth=0 verb=n snap=n free=n expl=n jdata=1 jsnap=nt nqz=sf_n(a1) nqx=sf_n(a2) oqz=sf_o(a1) oqx=sf_o(a2)''','''''')
rsf.doc.progs['sflwefd2d']=sflwefd2d

