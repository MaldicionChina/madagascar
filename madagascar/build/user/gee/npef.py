sfnpef = rsf.doc.rsfprog('sfnpef','user/gee/Mnpef.c','''Estimate Non-stationary PEF in N dimensions.''')
sfnpef.par('maskin',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfnpef.par('pch',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfnpef.par('filt',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfnpef.par('a',rsf.doc.rsfpar('ints','','',''' [dim]'''))
sfnpef.par('center',rsf.doc.rsfpar('ints','','',''' [dim]'''))
sfnpef.par('gap',rsf.doc.rsfpar('ints','','',''' [dim]'''))
sfnpef.par('niter',rsf.doc.rsfpar('int','100','','''number of iterations '''))
sfnpef.par('epsilon',rsf.doc.rsfpar('float','0.01','','''regularization parameter '''))
sfnpef.par('lag',rsf.doc.rsfpar('string ',desc='''output file for filter lags '''))
sfnpef.par('maskin',rsf.doc.rsfpar('string ',desc='''optional input mask file (auxiliary input file name)'''))
sfnpef.par('pch',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sfnpef.par('maskout',rsf.doc.rsfpar('string ',desc='''optional output mask file '''))
sfnpef.par('filt_pch',rsf.doc.rsfpar('string ',desc=''''''))
sfnpef.par('filt_lag',rsf.doc.rsfpar('string ',desc='''input file for double-helix filter lags '''))
sfnpef.version('1.7 Mnpef.c 11207 2013-10-28 16:56:21Z sfomel')
sfnpef.synopsis('''sfnpef < in.rsf > flt.rsf maskin=mask.rsf pch=patch.rsf filt=reg.rsf a= center= gap= niter=100 epsilon=0.01 lag= maskout= filt_pch= filt_lag=''','''''')
rsf.doc.progs['sfnpef']=sfnpef

