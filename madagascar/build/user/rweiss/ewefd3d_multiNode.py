sfewefd3d_multiNode = rsf.doc.rsfprog('sfewefd3d_multiNode','user/rweiss/Mewefd3d_multiNode.cu','''3D elastic time-domain FD modeling with multiple GPUs coordinated via MPI and p2p''')
sfewefd3d_multiNode.par('wav',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd3d_multiNode.par('ccc',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd3d_multiNode.par('den',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd3d_multiNode.par('sou',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd3d_multiNode.par('rec',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd3d_multiNode.par('wfl',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfewefd3d_multiNode.par('um',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd3d_multiNode.par('uo',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfewefd3d_multiNode.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfewefd3d_multiNode.par('snap',rsf.doc.rsfpar('bool','n','','''wavefield snapshots flag '''))
sfewefd3d_multiNode.par('free',rsf.doc.rsfpar('bool','n','','''free surface flag '''))
sfewefd3d_multiNode.par('ssou',rsf.doc.rsfpar('bool','n','','''stress source '''))
sfewefd3d_multiNode.par('dabc',rsf.doc.rsfpar('bool','n','','''absorbing BC '''))
sfewefd3d_multiNode.par('interp',rsf.doc.rsfpar('bool','y','','''perform linear interpolation on receiver locations '''))
sfewefd3d_multiNode.par('wavSrc',rsf.doc.rsfpar('bool','y','','''if yes, look for a source wavelet.  if no, look for initial displacement fields (uo and um) '''))
sfewefd3d_multiNode.par('ngpu',rsf.doc.rsfpar('int','1','','''Number of GPUs in each node, must be set to lowest common number of GPUs'''))
sfewefd3d_multiNode.par('nbell',rsf.doc.rsfpar('int','5','','''bell size '''))
sfewefd3d_multiNode.par('jdata',rsf.doc.rsfpar('int','1','','''extract receiver data every jdata time steps '''))
sfewefd3d_multiNode.par('jsnap',rsf.doc.rsfpar('int','nt','','''save wavefield every jsnap time steps '''))
sfewefd3d_multiNode.version('1.7')
sfewefd3d_multiNode.synopsis('''sfewefd3d_multiNode wav=Fwav.rsf ccc=Fccc.rsf den=Fden.rsf sou=Fsou.rsf rec=Frec.rsf wfl=Fwfl.rsf > Fdat.rsf um=Fum.rsf uo=Fuo.rsf verb=n snap=n free=n ssou=n dabc=n interp=y wavSrc=y ngpu=1 nbell=5 jdata=1 jsnap=nt''','''''')
rsf.doc.progs['sfewefd3d_multiNode']=sfewefd3d_multiNode

