/* This file is automatically generated. DO NOT EDIT! */

#ifndef _upgraddsr_h
#define _upgraddsr_h


typedef struct Upgrad *upgrad;
/* abstract data type */


upgrad upgrad_init(int ndim_in      /* number of dimensions */,
		   const int *nn_in /* [dim] data size */,
		   const float *d   /* [dim] data sampling */);
/*< initialize >*/


void upgrad_set(upgrad upg      /* upwind stencil */,
		const float *r0 /* reference time */,
		const float *s0 /* reference slowness-squared */,
		const int *f0   /* reference flag */);
/*< supply reference >*/


void upgrad_close(upgrad upg);
/*< free allocated memory >*/


void upgrad_solve(upgrad upg,
		  const float *rhs /* right-hand side */, 
		  float *x         /* solution */,
		  const float *x0  /* initial solution */);
/*< inv(alpha) >*/


void upgrad_inverse(upgrad upg,
		    float *rhs      /* right-hand side */,
		    const float *x  /* solution */,
		    const float *x0 /* initial solution */);
/*< adjoint inv(alpha) >*/


void upgrad_collect(upgrad upg,
		    const float *rhs /* right-hand side */, 
		    float *x         /* solution */);
/*< beta >*/


void upgrad_spread(upgrad upg,
		   float *rhs     /* right-hand side */,
		   const float *x /* solution */);
/*< adjoint beta >*/

#endif
