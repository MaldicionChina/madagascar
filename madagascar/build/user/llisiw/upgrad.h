/* This file is automatically generated. DO NOT EDIT! */

#ifndef _upgrad_h
#define _upgrad_h


typedef struct Upgrad *upgrad;
/* abstract data type */


upgrad upgrad_init(int mdim        /* number of dimensions */,
		   const int *mm   /* [dim] data size */,
		   const float *d  /* [dim] data sampling */);
/*< initialize >*/


void upgrad_set(upgrad upg, const float *r0 /* reference */);
/*< supply reference >*/


void upgrad_close(upgrad upg);
/*< free allocated storage >*/


void upgrad_solve(upgrad upg,
		  const float *rhs /* right-hand side */, 
		  float *x         /* solution */,
		  const float *x0  /* initial solution */);
/*< inverse operator >*/


void upgrad_inverse(upgrad upg,
		    float *rhs       /* right-hand side */,
		    const float *x   /* solution */,
		    const float *x0  /* initial solution */);
/*< adjoint of inverse operator >*/


void upgrad_forw(upgrad upg,
				 const float *x /* solution */,
				 float *rhs     /* right-hand side */);
/*< forward operator >*/


void upgrad_adj(upgrad upg,
				float *x         /* solution */,
				const float *rhs /* right-hand side */);
/*< adjoint operator >*/

#endif
