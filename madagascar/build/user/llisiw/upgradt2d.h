/* This file is automatically generated. DO NOT EDIT! */

#ifndef _upgradt2d_h
#define _upgradt2d_h


typedef struct Upgrad *upgrad;
/* abstract data type */


upgrad upgrad_init(int mdim       /* number of dimensions */,
		   const int *mm  /* [dim] data size */,
		   const float *d /* [dim] data sampling */);
/*< initialize >*/


void upgrad_set(upgrad upg      /* upwind stencil */, 
		const float* t0 /* t0 */,
		const float* x0 /* x0 */,
		const int* f0   /* f0 */);
/*< supply reference >*/


void upgrad_close(upgrad upg);
/*< free allocated storage >*/


void upgrad_solve(upgrad upg,
		  const float *rhs /* right-hand side */, 
		  float *x         /* solution */,
		  const float *r0  /* initial solution */,
		  bool time        /* time or position */);
/*< inverse operator >*/


void upgrad_inverse(upgrad upg,
		    float *rhs      /* right-hand side */,
		    const float *x  /* solution */,
		    const float *x0 /* initial solution */,
		    bool time       /* time or position */);
/*< adjoint of inverse operator >*/


void upgrad_forw(upgrad upg,
		 const float *x /* solution */,
		 float *rhs     /* right-hand side */,
		 bool time      /* time or position */);
/*< forward operator >*/


void upgrad_adj(upgrad upg,
		float *x         /* solution */,
		const float *rhs /* right-hand side */,
		bool time        /* time or position */);
/*< adjoint operator >*/

#endif
