sffatomoomp = rsf.doc.rsfprog('sffatomoomp','user/llisiw/Mfatomoomp.c','''First-arrival Traveltime Tomography (OMP) ''')
sffatomoomp.par('shot',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sffatomoomp.par('recv',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sffatomoomp.par('reco',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sffatomoomp.par('topo',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sffatomoomp.par('prec',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sffatomoomp.par('grad',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sffatomoomp.par('rayd',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sffatomoomp.par('time',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sffatomoomp.par('misnorm',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sffatomoomp.par('velocity',rsf.doc.rsfpar('bool','y','','''if y, the input is velocity; n, slowness squared '''))
sffatomoomp.par('shape',rsf.doc.rsfpar('bool','n','','''regularization (default Tikhnov) '''))
sffatomoomp.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sffatomoomp.par('order',rsf.doc.rsfpar('int','2','','''fast marching accuracy order '''))
sffatomoomp.par('seg',rsf.doc.rsfpar('int','3','','''maximum number of segments of topography '''))
sffatomoomp.par('niter',rsf.doc.rsfpar('int','1','','''number of slowness inversion iterations '''))
sffatomoomp.par('stiter',rsf.doc.rsfpar('int','100','','''number of inner CG iterations (for both Ticknov and Shaping) '''))
sffatomoomp.par('nstep',rsf.doc.rsfpar('int','10','','''number of linesearch '''))
sffatomoomp.par('eps',rsf.doc.rsfpar('float','0.','','''regularization parameter (for both Ticknov and Shaping) '''))
sffatomoomp.par('weight',rsf.doc.rsfpar('bool','n','','''data weighting '''))
sffatomoomp.par('pow',rsf.doc.rsfpar('float','2.','','''power raised for data weighting '''))
sffatomoomp.par('tol',rsf.doc.rsfpar('float','1.e-6','','''tolerance for shaping regularization '''))
sffatomoomp.par('rect#',rsf.doc.rsfpar('int','(1,1,...)','','''smoothing radius on #-th axis '''))
sffatomoomp.par('what',rsf.doc.rsfpar('string ',desc='''what to compute (default tomography) '''))
sffatomoomp.par('shot',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sffatomoomp.par('recv',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sffatomoomp.par('reco',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sffatomoomp.par('topo',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sffatomoomp.par('prec',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sffatomoomp.par('grad',rsf.doc.rsfpar('string ',desc='''auxiliary output file name'''))
sffatomoomp.par('rayd',rsf.doc.rsfpar('string ',desc='''auxiliary output file name'''))
sffatomoomp.par('time',rsf.doc.rsfpar('string ',desc='''auxiliary output file name'''))
sffatomoomp.par('misnorm',rsf.doc.rsfpar('string ',desc='''auxiliary output file name'''))
sffatomoomp.version('1.7')
sffatomoomp.synopsis('''sffatomoomp < sinp.rsf > sout.rsf shot=shot.rsf recv=recv.rsf reco=reco.rsf topo=topo.rsf prec=prec.rsf grad=grad.rsf rayd=rayd.rsf time=time.rsf misnorm=norm.rsf velocity=y shape=n verb=n order=2 seg=3 niter=1 stiter=100 nstep=10 eps=0. weight=n pow=2. tol=1.e-6 rect#=(1,1,...) what=''','''''')
rsf.doc.progs['sffatomoomp']=sffatomoomp

