sft2diter = rsf.doc.rsfprog('sft2diter','user/llisiw/Mt2diter.c','''Time-to-depth conversion (linear operator) ''')
sft2diter.par('s0',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sft2diter.par('t0',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sft2diter.par('x0',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sft2diter.par('f0',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sft2diter.par('mask',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sft2diter.par('prec',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sft2diter.par('dix',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sft2diter.par('velocity',rsf.doc.rsfpar('bool','y','','''y, inputs are velocity / n, slowness-squared '''))
sft2diter.par('adj',rsf.doc.rsfpar('bool','n','','''adjoint flag '''))
sft2diter.par('shape',rsf.doc.rsfpar('bool','n','','''regularization (default Tikhnov) '''))
sft2diter.par('eps',rsf.doc.rsfpar('float','0.1','','''regularization parameter '''))
sft2diter.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sft2diter.par('tol',rsf.doc.rsfpar('float','1.e-6','','''tolerance for shaping regularization '''))
sft2diter.par('cgiter',rsf.doc.rsfpar('int','200','','''number of CG iterations '''))
sft2diter.par('rect#',rsf.doc.rsfpar('int','(1,1,...)','','''smoothing radius on #-th axis '''))
sft2diter.par('what',rsf.doc.rsfpar('string ',desc='''what to compute (default inversion) '''))
sft2diter.par('s0',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sft2diter.par('t0',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sft2diter.par('x0',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sft2diter.par('f0',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sft2diter.par('mask',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sft2diter.par('prec',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sft2diter.par('dix',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sft2diter.version('1.7')
sft2diter.synopsis('''sft2diter < in.rsf > out.rsf s0=is0.rsf t0=it0.rsf x0=ix0.rsf f0=if0.rsf mask=mask.rsf prec=prec.rsf dix=dix.rsf velocity=y adj=n shape=n eps=0.1 verb=n tol=1.e-6 cgiter=200 rect#=(1,1,...) what=''','''''')
rsf.doc.progs['sft2diter']=sft2diter

