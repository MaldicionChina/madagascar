sfmkrcv = rsf.doc.rsfprog('sfmkrcv','user/llisiw/Mmkrcv.c','''Make topography mask / receiver list / record list for first-arrival traveltime tomography ''')
sfmkrcv.par('reco',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfmkrcv.par('shot',rsf.doc.rsfpar('file   ',desc='''auxiliary input file name'''))
sfmkrcv.par('topo',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfmkrcv.par('time',rsf.doc.rsfpar('file   ',desc='''auxiliary output file name'''))
sfmkrcv.par('air',rsf.doc.rsfpar('float','0.5','','''air velocity for thresholding topography '''))
sfmkrcv.par('velocity',rsf.doc.rsfpar('bool','y','','''if y, the input is velocity; n, slowness squared '''))
sfmkrcv.par('order',rsf.doc.rsfpar('int','2','','''fast marching accuracy order '''))
sfmkrcv.par('fix',rsf.doc.rsfpar('bool','n','','''if y, fixed-spread; n, moving acquisition '''))
sfmkrcv.par('plane',rsf.doc.rsfpar('bool','n','','''if y, plane-wave source; n, point source '''))
sfmkrcv.par('offset1',rsf.doc.rsfpar('int','0','','''receiver offset inline '''))
sfmkrcv.par('offset2',rsf.doc.rsfpar('int','0','','''receiver offset crossline '''))
sfmkrcv.par('np',rsf.doc.rsfpar('int','1','','''ray-parameter number '''))
sfmkrcv.par('p0',rsf.doc.rsfpar('float','0.','','''ray-parameter start '''))
sfmkrcv.par('dp',rsf.doc.rsfpar('float','1.','','''ray-parameter increment '''))
sfmkrcv.par('shot',rsf.doc.rsfpar('string ',desc='''auxiliary input file name'''))
sfmkrcv.par('topo',rsf.doc.rsfpar('string ',desc='''auxiliary output file name'''))
sfmkrcv.par('time',rsf.doc.rsfpar('string ',desc='''auxiliary output file name'''))
sfmkrcv.version('1.7')
sfmkrcv.synopsis('''sfmkrcv < in.rsf > out.rsf reco=reco.rsf shot=shot.rsf topo=topo.rsf time=time.rsf air=0.5 velocity=y order=2 fix=n plane=n offset1=0 offset2=0 np=1 p0=0. dp=1.''','''''')
rsf.doc.progs['sfmkrcv']=sfmkrcv

