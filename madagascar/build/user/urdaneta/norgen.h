/* This file is automatically generated. DO NOT EDIT! */

#ifndef _norgen_h
#define _norgen_h


struct point {
    float x;
    float z;
};


struct heptagon {
    struct point x0;
    float angle;
    float ampl;
    struct point x1;
    char cf;
};


struct grid {
    float *ampl;
    float *time;
    int *flag;
};


#define IN_BOUNDS     	0
#define OUT_OF_BOUNDS 	1
#define CAUSTIC	      	2
#define END	      	3
#define NEWC	      	4


#define ROUND(x)	 ((int) (x))


float dist (struct point pt1, struct point pt2);
/*< distance >*/


bool bigger (float x, float X);
/*< bigger >*/


bool smaller (float x, float X);
/*< smaller >*/


struct point makepoint (float x, float z);
/*< make a point >*/


float slope (struct point pti, struct point ptj);
/*< Calculates the slope of the line that goes through points pti - ptj >*/


float ordinate (struct point pti, float m);
/*< Calculates the intersection of the line that goes through point
 * pti with a slope m with the z axis. >*/


int bel (float X, float x1, float x2);
/*< Check to see whether x1 <= X <= x2 in case x1 < x2,
 * or x1 >= X >= x2 in case x1 >= x2. >*/


int eq_pts (struct point pt1, struct point pt2);
/*< equal points >*/


void printcube (struct heptagon *cube, int nr, FILE *outfile);
/*< print cube for debugging >*/

#endif
