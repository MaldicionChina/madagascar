sfodip = rsf.doc.rsfprog('sfodip','user/chen/Modip.c','''omnidirectional dip estimation  ''')
sfodip.par('m',rsf.doc.rsfpar('int','1','','''b[-m, ... ,n] '''))
sfodip.par('n',rsf.doc.rsfpar('int','1','','''b[-m, ... ,n] '''))
sfodip.par('rect1',rsf.doc.rsfpar('int','0','','''dip smoothness on 1st axis '''))
sfodip.par('rect2',rsf.doc.rsfpar('int','0','','''dip smoothness on 2nd axis '''))
sfodip.par('niter',rsf.doc.rsfpar('int','5','','''number of iterations '''))
sfodip.par('liter',rsf.doc.rsfpar('int','20','','''number of linear iterations '''))
sfodip.par('radius',rsf.doc.rsfpar('float','1.0','','''interpolating radius for opwd '''))
sfodip.par('eta',rsf.doc.rsfpar('float','0.5','','''steps for iteration '''))
sfodip.par('dip0',rsf.doc.rsfpar('float','0.0','','''starting dip '''))
sfodip.par('verb',rsf.doc.rsfpar('bool','n','','''verbosity flag '''))
sfodip.par('slope',rsf.doc.rsfpar('bool','n','','''slope (y) or dip (n) estimation '''))
sfodip.par('interp',rsf.doc.rsfpar('string ',desc='''interpolation method: maxflat lagrange bspline '''))
sfodip.version('1.7')
sfodip.synopsis('''sfodip < in.rsf > out.rsf m=1 n=1 rect1=0 rect2=0 niter=5 liter=20 radius=1.0 eta=0.5 dip0=0.0 verb=n slope=n interp=''','''''')
rsf.doc.progs['sfodip']=sfodip

