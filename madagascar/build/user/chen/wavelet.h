/* This file is automatically generated. DO NOT EDIT! */

#ifndef _wavelet_h
#define _wavelet_h


void sf_wvlt_frck(int nf,
		  sf_complex *buf,	/* in frequency; out = ricker wavelet */
		  float *par)		/* 0 ref freq, 1 phase */;
/*< frequency domain ricker wavelet >*/


void sf_wvlt_rck(int nt,
		 float *buf,		/* in time index; out = ricker wavelet */
		 float *par)		/* 0 ref freq, 1 phase */;
/*< time domain ricker wavelet >*/


void sf_wvlt_harmonic(int nt,
		      float *buf,		/* in time index; out = ricker wavelet */
		      float *par)		/* 0 ref freq, 1 phase */;
/*< harmonics: sin signal >*/


void sf_wvlt_sinc(int nt,
		  float *buf,		/* in time index; out = sinc wavelet */
		  float *par)		/* 0- fw; */;
/*< truncated sinc wavelet >*/

#endif
