/* This file is automatically generated. DO NOT EDIT! */

#ifndef _fxdeconutil_h
#define _fxdeconutil_h


kiss_fft_cpx cmplx(float re, float im);
/*< complex number >*/


void backward_substitution (int nrows, /* number of rows (and columns) of input matrix */
			    float **matrix, /* matrix of coefficients (after LU decomposition) */ 
			    int *idx, /* permutation vector obtained from routine LU decomposition */
			    float *b /* right hand side vector in equation Ax=b */);
/*< backward_substitution >*/


void lu_decomposition (int nrows, /* number of rows of matrix to invert */
		       float **matrix, /* matrix to invert */
		       int *idx,  /* vector recording the row permutations effected by partial pivoting */
		       float *d /*+/- 1 depending on whether the number of row interchanges was even or odd*/);
/*< LU decomposition >*/


void cxcor (int lx, int ifx, kiss_fft_cpx *x,
            int ly, int ify, kiss_fft_cpx *y, 
            int lz, int ifz, kiss_fft_cpx *z);
/*< complex correlation >*/


void cconv (int lx, int ifx, kiss_fft_cpx *x,
       	    int ly, int ify, kiss_fft_cpx *y,
	    int lz, int ifz, kiss_fft_cpx *z);
/*< complex convolution >*/

#endif
