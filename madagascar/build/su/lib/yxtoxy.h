/* This file is automatically generated. DO NOT EDIT! */

#ifndef _sf_yxtoxy_h
#define _sf_yxtoxy_h


void yxtoxy (int nx /* number of samples of y(x) */, 
	     float dx /* x sampling interval; dx>0.0 is required */, 
	     float fx /* first x */, 
	     const float *y /* array[nx] of y(x) values; y[0] < y[1] < ... < y[nx-1] required */, 
	     int ny /* number of samples of x(y) */, 
	     float dy /* y sampling interval; dy>0.0 is required */, 
	     float fy /* first y */, 
	     float xylo /* x value assigned to x(y) when y is less than smallest y(x) */, 
	     float xyhi /* x value assigned to x(y) when y is greater than largest y(x) */, 
	     float *x /* array[ny] of x(y) values */);
/*< Compute a regularly-sampled, monotonically increasing function x(y)
from a regularly-sampled, monotonically increasing function y(x) by
inverse linear interpolation.
***
Notes:
User must ensure that:
(1) dx>0.0 && dy>0.0
(2) y[0] < y[1] < ... < y[nx-1] >*/

#endif
